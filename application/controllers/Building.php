<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Building extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Building_model');
    } 

    /*
     * Listing of building
     */
    function index()
    {
        $data['building'] = $this->Building_model->get_all_building();
        
        $data['_view'] = 'building/index';
        $this->load->view('test',$data);
    }

    /*
     * Adding a new building
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'BUILDING_ID' => $this->input->post('BUILDING_ID'),
				'BUILDING_NAME' => $this->input->post('BUILDING_NAME'),
            );
            
            $building_id = $this->Building_model->add_building($params);
            redirect('building/index');
        }
        else
        {            
            $data['_view'] = 'building/add';
            $this->load->view('test',$data);
        }
    }  

    /*
     * Editing a building
     */
    function edit($BUILDING_ID)
    {   
        // check if the building exists before trying to edit it
        $data['building'] = $this->Building_model->get_building($BUILDING_ID);
        
        if(isset($data['building']['BUILDING_ID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'BUILDING_ID' => $this->input->post('BUILDING_ID'),
					'BUILDING_NAME' => $this->input->post('BUILDING_NAME'),
                );

                $this->Building_model->update_building($BUILDING_ID,$params);            
                redirect('building/index');
            }
            else
            {
                $data['_view'] = 'building/edit';
                $this->load->view('test',$data);
            }
        }
        else
            show_error('The building you are trying to edit does not exist.');
    } 

    /*
     * Deleting building
     */
    function remove($BUILDING_ID)
    {
        $building = $this->Building_model->get_building($BUILDING_ID);

        // check if the building exists before trying to delete it
        if(isset($building['BUILDING_ID']))
        {
            $this->Building_model->delete_building($BUILDING_ID);
            redirect('building/index');
        }
        else
            show_error('The building you are trying to delete does not exist.');
    }
    
}
