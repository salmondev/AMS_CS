<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Asset_verify extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Asset_verify_model');
    } 

    /*
     * Listing of asset_verify
     */
    function index()
    {
        $data['asset_verify'] = $this->Asset_verify_model->get_all_asset_verify();
        
        $data['_view'] = 'asset_verify/index';
        $this->load->view('test',$data);
    }

    /*
     * Adding a new asset_verify
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'ASSET_VERIFY_ID' => $this->input->post('ASSET_VERIFY_ID'),
				'ASSET_VERIFY_STATUS_NAME' => $this->input->post('ASSET_VERIFY_STATUS_NAME'),
				'ASSET_VERIFY_REFERID' => $this->input->post('ASSET_VERIFY_REFERID'),
				'ASSET_VERIFY_REFERNAME' => $this->input->post('ASSET_VERIFY_REFERNAME'),
				'ASSET_VERIFY_BUILDING_ID' => $this->input->post('ASSET_VERIFY_BUILDING_ID'),
				'ASSET_VERIFY_BUILDING_NAME' => $this->input->post('ASSET_VERIFY_BUILDING_NAME'),
				'ASSET_VERIFY_FLOOR_ID' => $this->input->post('ASSET_VERIFY_FLOOR_ID'),
				'ASSET_VERIFY_ROOM_ID' => $this->input->post('ASSET_VERIFY_ROOM_ID'),
				'ASSET_VERIFY_DAY' => $this->input->post('ASSET_VERIFY_DAY'),
				'ASSET_VERIFY_MONTH' => $this->input->post('ASSET_VERIFY_MONTH'),
				'ASSET_VERIFY_YEAR' => $this->input->post('ASSET_VERIFY_YEAR'),
				'ASSET_VERIFY_HOUR' => $this->input->post('ASSET_VERIFY_HOUR'),
				'ASSET_VERIFY_MINUTE' => $this->input->post('ASSET_VERIFY_MINUTE'),
				'ASSET_VERIFY_USER_ID' => $this->input->post('ASSET_VERIFY_USER_ID'),
				'ASSET_VERIFY_COMMITTEE_ID' => $this->input->post('ASSET_VERIFY_COMMITTEE_ID'),
            );
            
            $asset_verify_id = $this->Asset_verify_model->add_asset_verify($params);
            redirect('asset_verify/index');
        }
        else
        {            
            $data['_view'] = 'asset_verify/add';
            $this->load->view('test',$data);
        }
    }  

    /*
     * Editing a asset_verify
     */
    function edit($ASSET_VERIFY_RID)
    {   
        // check if the asset_verify exists before trying to edit it
        $data['asset_verify'] = $this->Asset_verify_model->get_asset_verify($ASSET_VERIFY_RID);
        
        if(isset($data['asset_verify']['ASSET_VERIFY_RID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'ASSET_VERIFY_ID' => $this->input->post('ASSET_VERIFY_ID'),
					'ASSET_VERIFY_STATUS_NAME' => $this->input->post('ASSET_VERIFY_STATUS_NAME'),
				    'ASSET_VERIFY_REFERID' => $this->input->post('ASSET_VERIFY_REFERID'),
				    'ASSET_VERIFY_REFERNAME' => $this->input->post('ASSET_VERIFY_REFERNAME'),
				    'ASSET_VERIFY_BUILDING_ID' => $this->input->post('ASSET_VERIFY_BUILDING_ID'),
				    'ASSET_VERIFY_BUILDING_NAME' => $this->input->post('ASSET_VERIFY_BUILDING_NAME'),
					'ASSET_VERIFY_FLOOR_ID' => $this->input->post('ASSET_VERIFY_FLOOR_ID'),
					'ASSET_VERIFY_ROOM_ID' => $this->input->post('ASSET_VERIFY_ROOM_ID'),
					'ASSET_VERIFY_DAY' => $this->input->post('ASSET_VERIFY_DAY'),
					'ASSET_VERIFY_MONTH' => $this->input->post('ASSET_VERIFY_MONTH'),
					'ASSET_VERIFY_YEAR' => $this->input->post('ASSET_VERIFY_YEAR'),
					'ASSET_VERIFY_HOUR' => $this->input->post('ASSET_VERIFY_HOUR'),
					'ASSET_VERIFY_MINUTE' => $this->input->post('ASSET_VERIFY_MINUTE'),
					'ASSET_VERIFY_USER_ID' => $this->input->post('ASSET_VERIFY_USER_ID'),
					'ASSET_VERIFY_COMMITTEE_ID' => $this->input->post('ASSET_VERIFY_COMMITTEE_ID'),
                );

                $this->Asset_verify_model->update_asset_verify($ASSET_VERIFY_RID,$params);            
                redirect('asset_verify/index');
            }
            else
            {
                $data['_view'] = 'asset_verify/edit';
                $this->load->view('test',$data);
            }
        }
        else
            show_error('The asset_verify you are trying to edit does not exist.');
    } 

    /*
     * Deleting asset_verify
     */
    function remove($ASSET_VERIFY_RID)
    {
        $asset_verify = $this->Asset_verify_model->get_asset_verify($ASSET_VERIFY_RID);

        // check if the asset_verify exists before trying to delete it
        if(isset($asset_verify['ASSET_VERIFY_RID']))
        {
            $this->Asset_verify_model->delete_asset_verify($ASSET_VERIFY_RID);
            redirect('asset_verify/index');
        }
        else
            show_error('The asset_verify you are trying to delete does not exist.');
    }
    
}
